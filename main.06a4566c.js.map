{"version":3,"sources":["node_modules/omgopass/random.browser.js","node_modules/omgopass/index.js","src/main.js"],"names":["document","addEventListener","$separators","getElementsByName","$password","$button","getElementsByClassName","$copyButton","$numbers","$titlecase","getMode","i","length","checked","value","renderPassword","mode","getOptions","minSyllableLength","maxSyllableLength","hasNumbers","titlecased","separators","select","execCommand","selection","empty","window","getSelection","removeAllRanges","disableToggles","disabled"],"mappings":";;;AAAA,IAAA,EAAA,KAAA,QAAA,KAAA,SAEA,OAAA,QAAA,CAAA,GAAA,EAAA,gBAAA,IAAA,WAAA;;ACFA,IAAA,EAAA,QAAA,YAEA,OAAA,QAAA,GACA,eAAA,EAAA,EACA,kBAAA,EAAA,EACA,kBAAA,EAAA,EACA,WAAA,GAAA,EACA,WAAA,GAAA,EACA,WAAA,EAAA,GACA,OAAA,EAAA,SACA,WAAA,EAAA,wBACA,KACA,EAAA,EAAA,IACA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAEA,EAAA,EAAA,EAAA,IACA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,SAEA,OAAA,IAAA,EAAA,EAAA,cAAA,IAKA,OAFA,IAAA,GAAA,EAAA,KAEA,GAAA,EACA,EAAA,EAAA,EAAA,SAAA,EACA,KAGA,IAAA,EAAA,CAAA,EAAA,KACA,IAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GACA,OAAA,GAGA,EAAA,GACA,EAAA,MACA,EAAA,EAEA,EAAA,IACA,GAAA,IACA,EAAA,EAAA,GACA,EAAA,GAGA,EAAA,KAAA;;AC1CA,aAHA,QAAA,gBACA,IAAA,EAAA,EAAA,QAAA,aAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAAA,SAASC,iBAAiB,mBAAoB,WACtCC,IAAAA,EAAcF,SAASG,kBAAkB,cACzCC,EAAYJ,SAASG,kBAAkB,YAAY,GACnDE,EAAUL,SAASM,uBAAuB,UAAU,GACpDC,EAAcP,SAASM,uBAAuB,kBAAkB,GAChEE,EAAWR,SAASG,kBAAkB,WAAW,GACjDM,EAAaT,SAASG,kBAAkB,aAAa,GAErDO,EAAU,WACT,IAAA,IAAIC,EAAI,EAAGA,EAAIT,EAAYU,OAAQD,IAClCT,GAAAA,EAAYS,GAAGE,QAAS,OAAOX,EAAYS,GAAGG,OAwBhDC,EAAiB,WApBJ,IACXC,EAoBNZ,EAAUU,OAAQ,EAAiBG,EAAAA,SAlBtB,YAFPD,EAAON,KAGJ,CACLQ,kBAAmB,EACnBC,kBAAmB,EACnBC,YAAY,EACZC,YAAY,EACZC,WAAY,KAIT,CACLF,WAAYZ,EAASK,QACrBQ,WAAYZ,EAAWI,QACvBS,WAAqB,YAATN,EAAqB,OAAS,MAmB9CD,IAEAV,EAAQJ,iBAAiB,QAASc,GAClCP,EAASP,iBAAiB,SAAUc,GACpCN,EAAWR,iBAAiB,SAAUc,GACtCR,EAAYN,iBAAiB,QAhBL,WACtBG,EAAUmB,SACVvB,SAASwB,YAAY,QAEjBxB,SAASyB,UACXzB,SAASyB,UAAUC,QACVC,OAAOC,cAChBD,OAAOC,eAAeC,oBAWrB,IAAA,IAAIlB,EAAI,EAAGA,EAAIT,EAAYU,OAAQD,IACtCT,EAAYS,GAAGV,iBAAiB,SAAU,WAClC6B,IAAAA,EAA+B,WAAdpB,IACvBF,EAASuB,SAAWD,EACpBrB,EAAWsB,SAAWD,EACtBf,MAIJX,EAAUH,iBAAiB,QAAS,WAClCG,EAAUmB","file":"main.06a4566c.js","sourceRoot":"..","sourcesContent":["let crypto = self.crypto || self.msCrypto;\n\nmodule.exports = size => crypto.getRandomValues(new Uint8Array(size));\n","let getRandomValues = require(\"./random\");\r\n\r\nmodule.exports = ({\r\n  syllablesCount = 3,\r\n  minSyllableLength = 2,\r\n  maxSyllableLength = 3,\r\n  hasNumbers = true,\r\n  titlecased = true,\r\n  separators = \"\",\r\n  vowels = \"aeiouy\",\r\n  consonants = \"bcdfghjklmnpqrstvwxz\"\r\n} = {}) =>\r\n  produce(syllablesCount, i => {\r\n    let length =\r\n      minSyllableLength + random(maxSyllableLength - minSyllableLength + 1);\r\n\r\n    let syllable = produce(length, index => {\r\n      let alpha = index % 2 ? vowels : consonants;\r\n      let char = alpha[random(alpha.length)];\r\n\r\n      return titlecased && !index ? char.toUpperCase() : char;\r\n    });\r\n\r\n    if (hasNumbers) syllable += random(10);\r\n\r\n    return i && separators\r\n      ? separators[random(separators.length)] + syllable\r\n      : syllable;\r\n  });\r\n\r\nlet produce = (number, callback) => {\r\n  for (var i = 0, result = \"\"; i < number; i++) result += callback(i);\r\n  return result;\r\n};\r\n\r\nlet buffer = [];\r\nlet bufferSize = 0xffff;\r\nlet bufferIndex = bufferSize;\r\n\r\nlet random = limit => {\r\n  if (bufferIndex >= bufferSize) {\r\n    buffer = getRandomValues(bufferSize);\r\n    bufferIndex = 0;\r\n  }\r\n\r\n  return buffer[bufferIndex++] % limit;\r\n};\r\n","import \"./styles.css\";\nimport generatePassword from \"omgopass\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const $separators = document.getElementsByName(\"separators\");\n  const $password = document.getElementsByName(\"password\")[0];\n  const $button = document.getElementsByClassName(\"button\")[0];\n  const $copyButton = document.getElementsByClassName(\"password__copy\")[0];\n  const $numbers = document.getElementsByName(\"numbers\")[0];\n  const $titlecase = document.getElementsByName(\"titlecase\")[0];\n\n  const getMode = () => {\n    for (var i = 0; i < $separators.length; i++) {\n      if ($separators[i].checked) return $separators[i].value;\n    }\n  };\n\n  const getOptions = () => {\n    const mode = getMode();\n\n    if (mode === \"spaces\") {\n      return {\n        minSyllableLength: 4,\n        maxSyllableLength: 6,\n        hasNumbers: false,\n        titlecased: false,\n        separators: \" \"\n      };\n    }\n\n    return {\n      hasNumbers: $numbers.checked,\n      titlecased: $titlecase.checked,\n      separators: mode === \"symbols\" ? \"-=~+\" : \"\"\n    };\n  };\n\n  const renderPassword = () => {\n    $password.value = generatePassword(getOptions());\n  };\n\n  const copyToClipboard = () => {\n    $password.select();\n    document.execCommand(\"copy\");\n\n    if (document.selection) {\n      document.selection.empty();\n    } else if (window.getSelection) {\n      window.getSelection().removeAllRanges();\n    }\n  };\n\n  renderPassword();\n\n  $button.addEventListener(\"click\", renderPassword);\n  $numbers.addEventListener(\"change\", renderPassword);\n  $titlecase.addEventListener(\"change\", renderPassword);\n  $copyButton.addEventListener(\"click\", copyToClipboard);\n\n  for (var i = 0; i < $separators.length; i++) {\n    $separators[i].addEventListener(\"change\", () => {\n      const disableToggles = getMode() === \"spaces\";\n      $numbers.disabled = disableToggles;\n      $titlecase.disabled = disableToggles;\n      renderPassword();\n    });\n  }\n\n  $password.addEventListener(\"click\", () => {\n    $password.select();\n  });\n});\n"]}